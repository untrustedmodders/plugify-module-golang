/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
extern size_t _GoStringLen(_GoString_ s);
extern const char *_GoStringPtr(_GoString_ s);
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "autoexports.go"
 #include "autoexports.h"

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#if !defined(__cplusplus) || _MSVC_LANG <= 201402L
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
#include <complex>
typedef std::complex<float> GoComplex64;
typedef std::complex<double> GoComplex128;
#endif
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void __NoParamReturnVoid(void);
extern GoUint8 __NoParamReturnBool(void);
extern GoInt8 __NoParamReturnChar8(void);
extern GoUint16 __NoParamReturnChar16(void);
extern GoInt8 __NoParamReturnInt8(void);
extern GoInt16 __NoParamReturnInt16(void);
extern GoInt32 __NoParamReturnInt32(void);
extern GoInt64 __NoParamReturnInt64(void);
extern GoUint8 __NoParamReturnUInt8(void);
extern GoUint16 __NoParamReturnUInt16(void);
extern GoUint32 __NoParamReturnUInt32(void);
extern GoUint64 __NoParamReturnUInt64(void);
extern GoUintptr __NoParamReturnPointer(void);
extern GoFloat32 __NoParamReturnFloat(void);
extern GoFloat64 __NoParamReturnDouble(void);
extern void* __NoParamReturnFunction(void);
extern String __NoParamReturnString(void);
extern Variant __NoParamReturnAny(void);
extern Vector __NoParamReturnArrayBool(void);
extern Vector __NoParamReturnArrayChar8(void);
extern Vector __NoParamReturnArrayChar16(void);
extern Vector __NoParamReturnArrayInt8(void);
extern Vector __NoParamReturnArrayInt16(void);
extern Vector __NoParamReturnArrayInt32(void);
extern Vector __NoParamReturnArrayInt64(void);
extern Vector __NoParamReturnArrayUInt8(void);
extern Vector __NoParamReturnArrayUInt16(void);
extern Vector __NoParamReturnArrayUInt32(void);
extern Vector __NoParamReturnArrayUInt64(void);
extern Vector __NoParamReturnArrayPointer(void);
extern Vector __NoParamReturnArrayFloat(void);
extern Vector __NoParamReturnArrayDouble(void);
extern Vector __NoParamReturnArrayString(void);
extern Vector __NoParamReturnArrayAny(void);
extern Vector __NoParamReturnArrayVector2(void);
extern Vector __NoParamReturnArrayVector3(void);
extern Vector __NoParamReturnArrayVector4(void);
extern Vector __NoParamReturnArrayMatrix4x4(void);
extern Vector2 __NoParamReturnVector2(void);
extern Vector3 __NoParamReturnVector3(void);
extern Vector4 __NoParamReturnVector4(void);
extern Matrix4x4 __NoParamReturnMatrix4x4(void);
extern void __Param1(GoInt32 a);
extern void __Param2(GoInt32 a, GoFloat32 b);
extern void __Param3(GoInt32 a, GoFloat32 b, GoFloat64 c);
extern void __Param4(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d);
extern void __Param5(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d, Vector* e);
extern void __Param6(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d, Vector* e, GoInt8 f);
extern void __Param7(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d, Vector* e, GoInt8 f, String* g);
extern void __Param8(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d, Vector* e, GoInt8 f, String* g, GoUint16 h);
extern void __Param9(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d, Vector* e, GoInt8 f, String* g, GoUint16 h, GoInt16 k);
extern void __Param10(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4* d, Vector* e, GoInt8 f, String* g, GoUint16 h, GoInt16 k, GoUintptr l);
extern void __ParamRef1(GoInt32* a);
extern void __ParamRef2(GoInt32* a, GoFloat32* b);
extern void __ParamRef3(GoInt32* a, GoFloat32* b, GoFloat64* c);
extern void __ParamRef4(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d);
extern void __ParamRef5(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, Vector* e);
extern void __ParamRef6(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, Vector* e, GoInt8* f);
extern void __ParamRef7(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, Vector* e, GoInt8* f, String* g);
extern void __ParamRef8(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, Vector* e, GoInt8* f, String* g, GoUint16* h);
extern void __ParamRef9(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, Vector* e, GoInt8* f, String* g, GoUint16* h, GoInt16* k);
extern void __ParamRef10(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, Vector* e, GoInt8* f, String* g, GoUint16* h, GoInt16* k, GoUintptr* l);
extern void __ParamRefVectors(Vector* p1, Vector* p2, Vector* p3, Vector* p4, Vector* p5, Vector* p6, Vector* p7, Vector* p8, Vector* p9, Vector* p10, Vector* p11, Vector* p12, Vector* p13, Vector* p14, Vector* p15);
extern GoInt64 __ParamAllPrimitives(GoUint8 p1, GoInt8 p2, GoUint16 p3, GoInt8 p4, GoInt16 p5, GoInt32 p6, GoInt64 p7, GoUint8 p8, GoUint16 p9, GoUint32 p10, GoUint64 p11, GoUintptr p12, GoFloat32 p13, GoFloat64 p14);
extern void __ParamVariant(Variant* p1, Vector* p2);
extern GoInt32 __ParamEnum(GoInt32 p1, Vector* p2);
extern GoInt32 __ParamEnumRef(GoInt32* p1, Vector* p2);
extern void __ParamVariantRef(Variant* p1, Vector* p2);
extern void __CallFuncVoid(void* func_);
extern GoUint8 __CallFuncBool(void* func_);
extern GoInt8 __CallFuncChar8(void* func_);
extern GoUint16 __CallFuncChar16(void* func_);
extern GoInt8 __CallFuncInt8(void* func_);
extern GoInt16 __CallFuncInt16(void* func_);
extern GoInt32 __CallFuncInt32(void* func_);
extern GoInt64 __CallFuncInt64(void* func_);
extern GoUint8 __CallFuncUInt8(void* func_);
extern GoUint16 __CallFuncUInt16(void* func_);
extern GoUint32 __CallFuncUInt32(void* func_);
extern GoUint64 __CallFuncUInt64(void* func_);
extern GoUintptr __CallFuncPtr(void* func_);
extern GoFloat32 __CallFuncFloat(void* func_);
extern GoFloat64 __CallFuncDouble(void* func_);
extern String __CallFuncString(void* func_);
extern Variant __CallFuncAny(void* func_);
extern GoUintptr __CallFuncFunction(void* func_);
extern Vector __CallFuncBoolVector(void* func_);
extern Vector __CallFuncChar8Vector(void* func_);
extern Vector __CallFuncChar16Vector(void* func_);
extern Vector __CallFuncInt8Vector(void* func_);
extern Vector __CallFuncInt16Vector(void* func_);
extern Vector __CallFuncInt32Vector(void* func_);
extern Vector __CallFuncInt64Vector(void* func_);
extern Vector __CallFuncUInt8Vector(void* func_);
extern Vector __CallFuncUInt16Vector(void* func_);
extern Vector __CallFuncUInt32Vector(void* func_);
extern Vector __CallFuncUInt64Vector(void* func_);
extern Vector __CallFuncPtrVector(void* func_);
extern Vector __CallFuncFloatVector(void* func_);
extern Vector __CallFuncDoubleVector(void* func_);
extern Vector __CallFuncStringVector(void* func_);
extern Vector __CallFuncAnyVector(void* func_);
extern Vector __CallFuncVec2Vector(void* func_);
extern Vector __CallFuncVec3Vector(void* func_);
extern Vector __CallFuncVec4Vector(void* func_);
extern Vector __CallFuncMat4x4Vector(void* func_);
extern Vector2 __CallFuncVec2(void* func_);
extern Vector3 __CallFuncVec3(void* func_);
extern Vector4 __CallFuncVec4(void* func_);
extern Matrix4x4 __CallFuncMat4x4(void* func_);
extern GoInt32 __CallFunc1(void* func_);
extern GoInt8 __CallFunc2(void* func_);
extern void __CallFunc3(void* func_);
extern Vector4 __CallFunc4(void* func_);
extern GoUint8 __CallFunc5(void* func_);
extern GoInt64 __CallFunc6(void* func_);
extern GoFloat64 __CallFunc7(void* func_);
extern Matrix4x4 __CallFunc8(void* func_);
extern void __CallFunc9(void* func_);
extern GoUint32 __CallFunc10(void* func_);
extern GoUintptr __CallFunc11(void* func_);
extern GoUint8 __CallFunc12(void* func_);
extern String __CallFunc13(void* func_);
extern Vector __CallFunc14(void* func_);
extern GoInt16 __CallFunc15(void* func_);
extern GoUintptr __CallFunc16(void* func_);
extern String __CallFunc17(void* func_);
extern String __CallFunc18(void* func_);
extern String __CallFunc19(void* func_);
extern String __CallFunc20(void* func_);
extern String __CallFunc21(void* func_);
extern String __CallFunc22(void* func_);
extern String __CallFunc23(void* func_);
extern String __CallFunc24(void* func_);
extern String __CallFunc25(void* func_);
extern String __CallFunc26(void* func_);
extern String __CallFunc27(void* func_);
extern String __CallFunc28(void* func_);
extern String __CallFunc29(void* func_);
extern String __CallFunc30(void* func_);
extern String __CallFunc31(void* func_);
extern String __CallFunc32(void* func_);
extern String __CallFunc33(void* func_);
extern String __CallFuncEnum(void* func_);
extern void __ReverseCall(String* test);

#ifdef __cplusplus
}
#endif
